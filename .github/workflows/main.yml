name: Build and deploy app

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    env:
      DISABLE_ESLINT_PLUGIN: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.1
        with:
          node-version: '14.17.x'

      - name: Install NPM packages
        run: npm ci

      - name: Build
        run: npm run build
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

      - name: Create 404.html
        run: cp ./build/index.html ./build/404.html

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          name: production-build
          path: ./build

  units:
    name: 'Unit tests'
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.1
        with:
          node-version: '14.17.x'

      - name: Install NPM packages
        run: npm ci

      - name: Run unit tests
        run: npm run test

  e2e:
    name: E2E
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.1
        with:
          node-version: '14.17.x'

      - name: Pull Dockerized Back-end
        run: docker pull ghcr.io/voirsy/back-end:main

      - name: Start Dockerized Back-end
        run: |
          docker run -d -p 8080:8080 \
          -e DB_CONNECT="${{ secrets.DB_CONNECT }}" \
          -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
          -e FRONTEND_URL="${{ secrets.FRONTEND_URL }}" \
          -e PROJECT_ID="${{ secrets.PROJECT_ID }}" \
          -e BUCKET_URL="${{ secrets.BUCKET_URL }}" \
          -e CLIENT_EMAIL="${{ secrets.CLIENT_EMAIL }}" \
          -e CLIENT_ID="${{ secrets.CLIENT_ID }}" \
          -e PRIVATE_KEY_ID="${{ secrets.PRIVATE_KEY_ID }}" \
          -e TYPE="${{ secrets.TYPE }}" \
          -e PRIVATE_KEY="${{ secrets.PRIVATE_KEY }}" \
          ghcr.io/voirsy/back-end:main

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: npm run start
          wait-on: 'http://localhost:3000'
          browser: chrome
          headless: true

  deploy:
    name: Deploy to Github Pages
    needs: build
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.0
        with:
          name: production-build
          path: ./build

      - name: GitHub Pages action
        uses: peaceiris/actions-gh-pages@v3.7.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
